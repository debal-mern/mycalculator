[{"D:\\rootz\\my-app\\src\\index.js":"1","D:\\rootz\\my-app\\src\\App.js":"2","D:\\rootz\\my-app\\src\\reportWebVitals.js":"3","D:\\rootz\\my-app\\src\\nodes\\Operation.jsx":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":279,"mtime":1609759593192,"results":"7","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"8","hashOfConfig":"6"},{"size":1586,"mtime":1609760033249,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"wt9nbv",{"filePath":"13","messages":"14","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"15","usedDeprecatedRules":"12"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"20"},"D:\\rootz\\my-app\\src\\index.js",[],["21","22"],"D:\\rootz\\my-app\\src\\App.js",["23"],"import logo from './logo.svg';\nimport './App.css';\n// Import Modules\nimport { Operation } from './nodes/Operation';\nfunction App() {\n  return (\n    <div className=\"App\">\n      <h1>\n        Simple Addition\n        </h1>\n       <Operation />\n    </div>\n  );\n}\n\nexport default App;\n","D:\\rootz\\my-app\\src\\reportWebVitals.js",[],"D:\\rootz\\my-app\\src\\nodes\\Operation.jsx",["24","25","26","27"],"import { createNode } from '@rootzjs/core';\nimport React from 'react';\n\nconst [node, dispatchNode] = createNode(\"Operation\", ({\n        state,\n        actions,\n    }) => {\n            return (\n                <React.Fragment>\n                    <h3>First argument value:- {state.first} </h3>\n            <h3>Second argument value is:- {state.second}</h3>\n                    {\n                        state.result ?\n                                <p>{state.result}</p>\n                        :\n                        <p>0</p>\n                    }\n                <button onClick={actions.ADD}>Add</button>\n                <button onClick={actions.SUB}>Sub</button>\n                <button onClick={actions.MUL}>Mul</button>\n                <button onClick={actions.RESET}>Reset</button>\n            </React.Fragment>\n                \n        )\n    });\n    \n    node.state({ \n            result: 0,\n            first:23,\n            second:12 \n    });\n    \n    // create action for updating the state on btn click\n    node.useActionCallback(\n        \"ADD\", \n        (state,[]) => ({ \n           result: state.first + state.second,\n        })\n    );\n    node.useActionCallback(\n        \"RESET\", \n        (state,[]) => ({ \n           result: 0,\n        })\n    );\n    node.useActionCallback(\n        \"SUB\", \n        (state,[]) => ({ \n            result: state.first - state.second,\n        })\n    );\n    node.useActionCallback(\n        \"MUL\", \n        (state,[]) => ({ \n            result: state.first * state.second,\n        })\n    );\n    export const Operation = dispatchNode(node);\n",{"ruleId":"28","replacedBy":"29"},{"ruleId":"30","replacedBy":"31"},{"ruleId":"32","severity":1,"message":"33","line":1,"column":8,"nodeType":"34","messageId":"35","endLine":1,"endColumn":12},{"ruleId":"36","severity":1,"message":"37","line":36,"column":16,"nodeType":"38","messageId":"39","endLine":36,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":42,"column":16,"nodeType":"38","messageId":"39","endLine":42,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":48,"column":16,"nodeType":"38","messageId":"39","endLine":48,"endColumn":18},{"ruleId":"36","severity":1,"message":"37","line":54,"column":16,"nodeType":"38","messageId":"39","endLine":54,"endColumn":18},"no-native-reassign",["40"],"no-negated-in-lhs",["41"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-empty-pattern","Unexpected empty array pattern.","ArrayPattern","unexpected","no-global-assign","no-unsafe-negation"]